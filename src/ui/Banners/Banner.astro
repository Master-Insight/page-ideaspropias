---
let {
  darkMode = false, // Propiedad para alternar entre el modo claro y oscuro
  colorScheme = "primary", // Permite elegir el esquema de color (primary, secondary, etc.)
  shadow = false, // Si está activado, aplica una sombra al contenedor
  shadowType = "glow", // Tipo de sombra: glow, bottom, double
} = Astro.props;

const colorVariants = {
  primary: {
    bg: darkMode ? "bg-primary-darker" : "bg-primary-lighter",
  },
  secondary: {
    bg: darkMode ? "bg-secondary-darker" : "bg-secondary-lighter",
  },
  tertiary: {
    bg: darkMode ? "bg-tertiary-darker" : "bg-tertiary-lighter",
  },
  complementary: {
    bg: darkMode ? "bg-complementary-darker" : "bg-complementary-lighter",
  },
  black: {
    bg: "bg-black",
  },
  white: {
    bg: "bg-white",
  },
  transparent: {
    bg: "bg-transparent",
  },
};

// Seleccionamos el esquema de color
const selectedColors = colorVariants[colorScheme] || colorVariants.primary;

// Clases para sombra opcional, según el tipo de sombra seleccionado
const shadowClass = shadow ? `shadow-${shadowType}` : "";
---

<section
  class={`flex flex-col justify-center items-center text-center mb-4 p-4 ${selectedColors.bg} ${shadowClass}`}
>
  <slot />
</section>
