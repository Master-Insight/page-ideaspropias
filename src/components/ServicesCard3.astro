---
import { getCollection } from "astro:content";

/* console.log: Service
{
  id: 'IdentidadEmpresarial.md',
  data: {
    order: 3,
    title: 'Identidad Empresarial',
    person: 'flaviajoubert',
    subtitle: 'Detalles',
    img: '/Icono.svg'
  },
  body: 'Cultura',
  filePath: 'src/content/services/IdentidadEmpresarial.md',
  digest: 'e400a93d1abee11f',
  rendered: { html: '<p>Cultura</p>', metadata: [Object] },
  collection: 'services',
  slug: 'identidadempresarial',
  render: [Function: render]
}*/

const { data: element } = Astro.props;
const { data, slug } = element;
const { title, subtitle, img, areas, person } = data;

// Obtener la colección `team`
const TEAM = await getCollection("team");
// Buscar el miembro correspondiente
const teamMember = TEAM.find((member) => member.slug === person);
const { given_name = "", linkedin = "#" } = teamMember?.data || {};
---

<article
  class="flex w-full max-w-3xl h-auto bg-white shadow-lg rounded-lg overflow-hidden"
>
  {/* Imagen */}
  <div class="flex-shrink-0 w-1/3">
    <img src={img} alt={title} class="h-full w-full object-cover" />
  </div>

  {/* Contenido */}
  <div class="flex flex-col justify-center p-6 w-2/3">
    {/* Título */}
    <h3 class="text-3xl font-bold text-gray-800">{title}</h3>

    {/* Subtítulo */}
    <p class="text-lg text-gray-600 mt-2">{subtitle}</p>

    {/* Nombre y LinkedIn */}
    <div class="mt-3 text-gray-600 flex gap-3 items-center">
      {given_name && <p class="font-medium text-gray-800">Por: {given_name}</p>}
      {
        linkedin && (
          <a
            href={linkedin}
            target="_blank"
            rel="noopener noreferrer"
            class="text-primary hover:text-primary-darker transition"
            aria-label={`Perfil de LinkedIn de ${given_name}`}>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              fill="currentColor"
              class="w-6 h-6"
              viewBox="0 0 24 24">
              <path d="M19 0h-14c-2.76 0-5 2.24-5 5v14c0 2.76 2.24 5 5 5h14c2.76 0 5-2.24 5-5v-14c0-2.76-2.24-5-5-5zm-11 19h-3v-9h3v9zm-1.5-10.22c-1 0-1.5-.72-1.5-1.61 0-.91.5-1.61 1.5-1.61s1.5.7 1.5 1.61c0 .89-.5 1.61-1.5 1.61zm13.5 10.22h-3v-4.78c0-1.14-.02-2.61-1.59-2.61-1.59 0-1.84 1.25-1.84 2.54v4.85h-3v-9h2.88v1.23h.04c.4-.75 1.37-1.54 2.82-1.54 3.02 0 3.58 1.99 3.58 4.58v4.73z" />
            </svg>
          </a>
        )
      }
    </div>

    {/* Áreas */}
    {
      areas && (
        <div class="mt-4">
          <h4 class="text-lg font-semibold text-gray-700">Áreas:</h4>
          <ul class="list-disc list-inside mt-2 text-gray-600">
            {Object.values(areas).map((area, index) => (
              <li key={index}>
                {area.icon} - {area.title}
              </li>
            ))}
          </ul>
        </div>
      )
    }

    {/* Botón */}
    <a
      href={`/services/${slug}`}
      class="mt-6 inline-block bg-primary text-white py-2 px-4 rounded hover:bg-primary-dark transition duration-150"
    >
      Ver más
    </a>
  </div>
</article>
